version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0
  aws-cli: circleci/aws-cli@2.0

executors:
  amd64:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
    environment:
      ARCH: x86_64

  arm64:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: arm.medium
    environment:
      ARCH: aarch64

platforms: &platforms
  - amd64
  - arm64

alpine-versions: &alpine-versions
  - "3.20"
  - "3.21"

php-versions: &php-versions
  - "8.2"
  - "8.3"
  - "8.4"

jobs:
  build:
    parameters:
      alpine:
        type: string
      php:
        type: string
      executor:
        type: string
    executor: << parameters.executor >>
    steps:
      - checkout
      - run: make keys
      - run:
          name: Build
          command: |
            echo "Building alpine << parameters.alpine >> php << parameters.php >> arch ${ARCH}"
            make build ARCH=${ARCH} ALPINE=<< parameters.alpine >> PHP=<< parameters.php >>
      - store_artifacts:
          path: build/.abuild/skpr.rsa.pub
          destination: skpr.rsa.pub
      - store_artifacts:
          path: _output/<< parameters.alpine >>/php<< parameters.php >>

  release:
    parameters:
      alpine:
        type: string
      php:
        type: string
      executor:
        type: string
    executor: << parameters.executor >>
    steps:
      - checkout
      - aws-cli/install
      - run:
          name: Decrypt Keys
          command: |
            aws kms decrypt \
              --ciphertext-blob fileb://<(cat build/.abuild/skpr.rsa.asc | base64 --decode) \
              --output text \
              --query Plaintext | base64 --decode > build/.abuild/skpr.rsa
      - run:
          name: Build
          command: |
            echo "Building alpine << parameters.alpine >> php << parameters.php >> arch ${ARCH}"
            make build ARCH=${ARCH} ALPINE=<< parameters.alpine >> PHP=<< parameters.php >>
      - run:
          name: Sync
          command: |
            aws s3 sync --acl public-read \
                        --cache-control "max-age=86400" \
                        --delete \
                        _output/<< parameters.alpine >>/php<< parameters.php >>/${ARCH} \
                        s3://package-skpr-io/php-alpine/<< parameters.alpine >>/php<< parameters.php >>/${ARCH}

            # Public key for validating repository pakages.
            aws s3 cp build/.abuild/skpr.rsa.pub s3://package-skpr-io/php-alpine/skpr.rsa.pub
      - run:
          name: Invalidate
          command: aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths /php-alpine/<< parameters.alpine >>/php<< parameters.php >>/*
      - run:
          # This is probably not required.
          # But we wouldn't be doing our due diligence as operators if we didn't
          # try to clean this up.
          name: Delete Private Key
          command: |
            rm -f build/.abuild/skpr.rsa

workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: main
          matrix:
            parameters:
              executor: *platforms
              alpine: *alpine-versions
              php: *php-versions

  release:
    jobs:
      - release:
          filters:
            branches:
              only: main
          matrix:
            parameters:
              executor: *platforms
              alpine: *alpine-versions
              php: *php-versions
